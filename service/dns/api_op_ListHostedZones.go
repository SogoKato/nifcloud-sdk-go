// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package dns

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/private/protocol"
	"github.com/nifcloud/nifcloud-sdk-go/internal/nifcloudutil"
)

type ListHostedZonesInput struct {
	_ struct{} `type:"structure"`

	Marker *string `location:"querystring" locationName:"marker" type:"string"`

	Maxitems *int64 `location:"querystring" locationName:"maxitems" type:"integer"`
}

// String returns the string representation
func (s ListHostedZonesInput) String() string {
	return nifcloudutil.Prettify(s)
}

// MarshalFields encodes the AWS API shape using the passed in protocol encoder.
func (s ListHostedZonesInput) MarshalFields(e protocol.FieldEncoder) error {

	if s.Marker != nil {
		v := *s.Marker

		metadata := protocol.Metadata{}
		e.SetValue(protocol.QueryTarget, "marker", protocol.StringValue(v), metadata)
	}
	if s.Maxitems != nil {
		v := *s.Maxitems

		metadata := protocol.Metadata{}
		e.SetValue(protocol.QueryTarget, "maxitems", protocol.Int64Value(v), metadata)
	}
	return nil
}

type ListHostedZonesOutput struct {
	_ struct{} `type:"structure"`

	HostedZones []HostedZones `locationName:"HostedZones" locationNameList:"HostedZone" type:"list"`

	IsTruncated *bool `locationName:"IsTruncated" type:"boolean"`

	Marker *string `locationName:"Marker" type:"string"`

	MaxItems *int64 `locationName:"MaxItems" type:"integer"`

	NextMarker *string `locationName:"NextMarker" type:"string"`
}

// String returns the string representation
func (s ListHostedZonesOutput) String() string {
	return nifcloudutil.Prettify(s)
}

// MarshalFields encodes the AWS API shape using the passed in protocol encoder.
func (s ListHostedZonesOutput) MarshalFields(e protocol.FieldEncoder) error {
	if s.HostedZones != nil {
		v := s.HostedZones

		metadata := protocol.Metadata{ListLocationName: "HostedZone"}
		ls0 := e.List(protocol.BodyTarget, "HostedZones", metadata)
		ls0.Start()
		for _, v1 := range v {
			ls0.ListAddFields(v1)
		}
		ls0.End()

	}
	if s.IsTruncated != nil {
		v := *s.IsTruncated

		metadata := protocol.Metadata{}
		e.SetValue(protocol.BodyTarget, "IsTruncated", protocol.BoolValue(v), metadata)
	}
	if s.Marker != nil {
		v := *s.Marker

		metadata := protocol.Metadata{}
		e.SetValue(protocol.BodyTarget, "Marker", protocol.StringValue(v), metadata)
	}
	if s.MaxItems != nil {
		v := *s.MaxItems

		metadata := protocol.Metadata{}
		e.SetValue(protocol.BodyTarget, "MaxItems", protocol.Int64Value(v), metadata)
	}
	if s.NextMarker != nil {
		v := *s.NextMarker

		metadata := protocol.Metadata{}
		e.SetValue(protocol.BodyTarget, "NextMarker", protocol.StringValue(v), metadata)
	}
	return nil
}

const opListHostedZones = "ListHostedZones"

// ListHostedZonesRequest returns a request value for making API operation for
// NIFCLOUD DNS.
//
//    // Example sending a request using ListHostedZonesRequest.
//    req := client.ListHostedZonesRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://pfs.nifcloud.com/api/dns/ListHostedZones.htm
func (c *Client) ListHostedZonesRequest(input *ListHostedZonesInput) ListHostedZonesRequest {
	op := &aws.Operation{
		Name:       opListHostedZones,
		HTTPMethod: "GET",
		HTTPPath:   "/2012-12-12N2013-12-16/hostedzone",
	}

	if input == nil {
		input = &ListHostedZonesInput{}
	}

	req := c.newRequest(op, input, &ListHostedZonesOutput{})

	return ListHostedZonesRequest{Request: req, Input: input, Copy: c.ListHostedZonesRequest}
}

// ListHostedZonesRequest is the request type for the
// ListHostedZones API operation.
type ListHostedZonesRequest struct {
	*aws.Request
	Input *ListHostedZonesInput
	Copy  func(*ListHostedZonesInput) ListHostedZonesRequest
}

// Send marshals and sends the ListHostedZones API request.
func (r ListHostedZonesRequest) Send(ctx context.Context) (*ListHostedZonesResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &ListHostedZonesResponse{
		ListHostedZonesOutput: r.Request.Data.(*ListHostedZonesOutput),
		response:              &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// ListHostedZonesResponse is the response type for the
// ListHostedZones API operation.
type ListHostedZonesResponse struct {
	*ListHostedZonesOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// ListHostedZones request.
func (r *ListHostedZonesResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
