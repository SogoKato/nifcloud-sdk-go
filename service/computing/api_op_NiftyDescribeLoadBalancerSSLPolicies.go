// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package computing

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/nifcloud/nifcloud-sdk-go/internal/nifcloudutil"
)

type NiftyDescribeLoadBalancerSSLPoliciesInput struct {
	_ struct{} `type:"structure"`

	// LoadBalancerName is a required field
	LoadBalancerName *string `locationName:"LoadBalancerName" type:"string" required:"true"`
}

// String returns the string representation
func (s NiftyDescribeLoadBalancerSSLPoliciesInput) String() string {
	return nifcloudutil.Prettify(s)
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *NiftyDescribeLoadBalancerSSLPoliciesInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "NiftyDescribeLoadBalancerSSLPoliciesInput"}

	if s.LoadBalancerName == nil {
		invalidParams.Add(aws.NewErrParamRequired("LoadBalancerName"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

type NiftyDescribeLoadBalancerSSLPoliciesOutput struct {
	_ struct{} `type:"structure"`

	LoadBalancerName *string `locationName:"LoadBalancerName" type:"string"`

	ResponseMetadata *ResponseMetadata `locationName:"ResponseMetadata" type:"structure"`

	SSLPoliciesDescriptions []SSLPoliciesDescriptions `locationName:"SSLPoliciesDescriptions" locationNameList:"member" type:"list"`
}

// String returns the string representation
func (s NiftyDescribeLoadBalancerSSLPoliciesOutput) String() string {
	return nifcloudutil.Prettify(s)
}

const opNiftyDescribeLoadBalancerSSLPolicies = "NiftyDescribeLoadBalancerSSLPolicies"

// NiftyDescribeLoadBalancerSSLPoliciesRequest returns a request value for making API operation for
// NIFCLOUD Computing.
//
//    // Example sending a request using NiftyDescribeLoadBalancerSSLPoliciesRequest.
//    req := client.NiftyDescribeLoadBalancerSSLPoliciesRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://pfs.nifcloud.com/api/rest/NiftyDescribeLoadBalancerSSLPolicies.htm
func (c *Client) NiftyDescribeLoadBalancerSSLPoliciesRequest(input *NiftyDescribeLoadBalancerSSLPoliciesInput) NiftyDescribeLoadBalancerSSLPoliciesRequest {
	op := &aws.Operation{
		Name:       opNiftyDescribeLoadBalancerSSLPolicies,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &NiftyDescribeLoadBalancerSSLPoliciesInput{}
	}

	req := c.newRequest(op, input, &NiftyDescribeLoadBalancerSSLPoliciesOutput{})

	return NiftyDescribeLoadBalancerSSLPoliciesRequest{Request: req, Input: input, Copy: c.NiftyDescribeLoadBalancerSSLPoliciesRequest}
}

// NiftyDescribeLoadBalancerSSLPoliciesRequest is the request type for the
// NiftyDescribeLoadBalancerSSLPolicies API operation.
type NiftyDescribeLoadBalancerSSLPoliciesRequest struct {
	*aws.Request
	Input *NiftyDescribeLoadBalancerSSLPoliciesInput
	Copy  func(*NiftyDescribeLoadBalancerSSLPoliciesInput) NiftyDescribeLoadBalancerSSLPoliciesRequest
}

// Send marshals and sends the NiftyDescribeLoadBalancerSSLPolicies API request.
func (r NiftyDescribeLoadBalancerSSLPoliciesRequest) Send(ctx context.Context) (*NiftyDescribeLoadBalancerSSLPoliciesResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &NiftyDescribeLoadBalancerSSLPoliciesResponse{
		NiftyDescribeLoadBalancerSSLPoliciesOutput: r.Request.Data.(*NiftyDescribeLoadBalancerSSLPoliciesOutput),
		response: &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// NiftyDescribeLoadBalancerSSLPoliciesResponse is the response type for the
// NiftyDescribeLoadBalancerSSLPolicies API operation.
type NiftyDescribeLoadBalancerSSLPoliciesResponse struct {
	*NiftyDescribeLoadBalancerSSLPoliciesOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// NiftyDescribeLoadBalancerSSLPolicies request.
func (r *NiftyDescribeLoadBalancerSSLPoliciesResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
