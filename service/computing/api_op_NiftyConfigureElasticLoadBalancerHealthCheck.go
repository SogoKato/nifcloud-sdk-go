// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package computing

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/nifcloud/nifcloud-sdk-go/internal/nifcloudutil"
)

type NiftyConfigureElasticLoadBalancerHealthCheckInput struct {
	_ struct{} `type:"structure"`

	ElasticLoadBalancerId *string `locationName:"ElasticLoadBalancerId" type:"string"`

	ElasticLoadBalancerName *string `locationName:"ElasticLoadBalancerName" type:"string"`

	// ElasticLoadBalancerPort is a required field
	ElasticLoadBalancerPort *int64 `locationName:"ElasticLoadBalancerPort" type:"integer" required:"true"`

	// HealthCheck is a required field
	HealthCheck *RequestHealthCheckOfNiftyConfigureElasticLoadBalancerHealthCheck `locationName:"HealthCheck" type:"structure" required:"true"`

	// InstancePort is a required field
	InstancePort *int64 `locationName:"InstancePort" type:"integer" required:"true"`

	// Protocol is a required field
	Protocol ProtocolOfNiftyConfigureElasticLoadBalancerHealthCheckRequest `locationName:"Protocol" type:"string" required:"true" enum:"true"`
}

// String returns the string representation
func (s NiftyConfigureElasticLoadBalancerHealthCheckInput) String() string {
	return nifcloudutil.Prettify(s)
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *NiftyConfigureElasticLoadBalancerHealthCheckInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "NiftyConfigureElasticLoadBalancerHealthCheckInput"}

	if s.ElasticLoadBalancerPort == nil {
		invalidParams.Add(aws.NewErrParamRequired("ElasticLoadBalancerPort"))
	}

	if s.HealthCheck == nil {
		invalidParams.Add(aws.NewErrParamRequired("HealthCheck"))
	}

	if s.InstancePort == nil {
		invalidParams.Add(aws.NewErrParamRequired("InstancePort"))
	}
	if len(s.Protocol) == 0 {
		invalidParams.Add(aws.NewErrParamRequired("Protocol"))
	}
	if s.HealthCheck != nil {
		if err := s.HealthCheck.Validate(); err != nil {
			invalidParams.AddNested("HealthCheck", err.(aws.ErrInvalidParams))
		}
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

type NiftyConfigureElasticLoadBalancerHealthCheckOutput struct {
	_ struct{} `type:"structure"`

	HealthCheck *HealthCheckOfNiftyConfigureElasticLoadBalancerHealthCheck `locationName:"HealthCheck" type:"structure"`

	ResponseMetadata *ResponseMetadata `locationName:"ResponseMetadata" type:"structure"`
}

// String returns the string representation
func (s NiftyConfigureElasticLoadBalancerHealthCheckOutput) String() string {
	return nifcloudutil.Prettify(s)
}

const opNiftyConfigureElasticLoadBalancerHealthCheck = "NiftyConfigureElasticLoadBalancerHealthCheck"

// NiftyConfigureElasticLoadBalancerHealthCheckRequest returns a request value for making API operation for
// NIFCLOUD Computing.
//
//    // Example sending a request using NiftyConfigureElasticLoadBalancerHealthCheckRequest.
//    req := client.NiftyConfigureElasticLoadBalancerHealthCheckRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://pfs.nifcloud.com/api/rest/NiftyConfigureElasticLoadBalancerHealthCheck.htm
func (c *Client) NiftyConfigureElasticLoadBalancerHealthCheckRequest(input *NiftyConfigureElasticLoadBalancerHealthCheckInput) NiftyConfigureElasticLoadBalancerHealthCheckRequest {
	op := &aws.Operation{
		Name:       opNiftyConfigureElasticLoadBalancerHealthCheck,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &NiftyConfigureElasticLoadBalancerHealthCheckInput{}
	}

	req := c.newRequest(op, input, &NiftyConfigureElasticLoadBalancerHealthCheckOutput{})

	return NiftyConfigureElasticLoadBalancerHealthCheckRequest{Request: req, Input: input, Copy: c.NiftyConfigureElasticLoadBalancerHealthCheckRequest}
}

// NiftyConfigureElasticLoadBalancerHealthCheckRequest is the request type for the
// NiftyConfigureElasticLoadBalancerHealthCheck API operation.
type NiftyConfigureElasticLoadBalancerHealthCheckRequest struct {
	*aws.Request
	Input *NiftyConfigureElasticLoadBalancerHealthCheckInput
	Copy  func(*NiftyConfigureElasticLoadBalancerHealthCheckInput) NiftyConfigureElasticLoadBalancerHealthCheckRequest
}

// Send marshals and sends the NiftyConfigureElasticLoadBalancerHealthCheck API request.
func (r NiftyConfigureElasticLoadBalancerHealthCheckRequest) Send(ctx context.Context) (*NiftyConfigureElasticLoadBalancerHealthCheckResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &NiftyConfigureElasticLoadBalancerHealthCheckResponse{
		NiftyConfigureElasticLoadBalancerHealthCheckOutput: r.Request.Data.(*NiftyConfigureElasticLoadBalancerHealthCheckOutput),
		response: &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// NiftyConfigureElasticLoadBalancerHealthCheckResponse is the response type for the
// NiftyConfigureElasticLoadBalancerHealthCheck API operation.
type NiftyConfigureElasticLoadBalancerHealthCheckResponse struct {
	*NiftyConfigureElasticLoadBalancerHealthCheckOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// NiftyConfigureElasticLoadBalancerHealthCheck request.
func (r *NiftyConfigureElasticLoadBalancerHealthCheckResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
