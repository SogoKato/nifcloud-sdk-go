// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package computing

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/nifcloud/nifcloud-sdk-go/internal/nifcloudutil"
)

type AttachIsoImageInput struct {
	_ struct{} `type:"structure"`

	InstanceUniqueId *string `locationName:"InstanceUniqueId" type:"string"`

	IsoImageId *string `locationName:"IsoImageId" type:"string"`
}

// String returns the string representation
func (s AttachIsoImageInput) String() string {
	return nifcloudutil.Prettify(s)
}

type AttachIsoImageOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	Return *bool `locationName:"return" type:"boolean"`
}

// String returns the string representation
func (s AttachIsoImageOutput) String() string {
	return nifcloudutil.Prettify(s)
}

const opAttachIsoImage = "AttachIsoImage"

// AttachIsoImageRequest returns a request value for making API operation for
// NIFCLOUD Computing.
//
//    // Example sending a request using AttachIsoImageRequest.
//    req := client.AttachIsoImageRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://pfs.nifcloud.com/api/rest/AttachIsoImage.htm
func (c *Client) AttachIsoImageRequest(input *AttachIsoImageInput) AttachIsoImageRequest {
	op := &aws.Operation{
		Name:       opAttachIsoImage,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &AttachIsoImageInput{}
	}

	req := c.newRequest(op, input, &AttachIsoImageOutput{})

	return AttachIsoImageRequest{Request: req, Input: input, Copy: c.AttachIsoImageRequest}
}

// AttachIsoImageRequest is the request type for the
// AttachIsoImage API operation.
type AttachIsoImageRequest struct {
	*aws.Request
	Input *AttachIsoImageInput
	Copy  func(*AttachIsoImageInput) AttachIsoImageRequest
}

// Send marshals and sends the AttachIsoImage API request.
func (r AttachIsoImageRequest) Send(ctx context.Context) (*AttachIsoImageResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &AttachIsoImageResponse{
		AttachIsoImageOutput: r.Request.Data.(*AttachIsoImageOutput),
		response:             &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// AttachIsoImageResponse is the response type for the
// AttachIsoImage API operation.
type AttachIsoImageResponse struct {
	*AttachIsoImageOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// AttachIsoImage request.
func (r *AttachIsoImageResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
