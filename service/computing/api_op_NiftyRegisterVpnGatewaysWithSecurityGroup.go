// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package computing

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/nifcloud/nifcloud-sdk-go/internal/nifcloudutil"
)

type NiftyRegisterVpnGatewaysWithSecurityGroupInput struct {
	_ struct{} `type:"structure"`

	// GroupName is a required field
	GroupName *string `locationName:"GroupName" type:"string" required:"true"`

	VpnGatewaySet []RequestVpnGatewaySet `locationName:"VpnGatewaySet" type:"list"`
}

// String returns the string representation
func (s NiftyRegisterVpnGatewaysWithSecurityGroupInput) String() string {
	return nifcloudutil.Prettify(s)
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *NiftyRegisterVpnGatewaysWithSecurityGroupInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "NiftyRegisterVpnGatewaysWithSecurityGroupInput"}

	if s.GroupName == nil {
		invalidParams.Add(aws.NewErrParamRequired("GroupName"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

type NiftyRegisterVpnGatewaysWithSecurityGroupOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	VpnGatewaySet []VpnGatewaySet `locationName:"vpnGatewaySet" locationNameList:"item" type:"list"`
}

// String returns the string representation
func (s NiftyRegisterVpnGatewaysWithSecurityGroupOutput) String() string {
	return nifcloudutil.Prettify(s)
}

const opNiftyRegisterVpnGatewaysWithSecurityGroup = "NiftyRegisterVpnGatewaysWithSecurityGroup"

// NiftyRegisterVpnGatewaysWithSecurityGroupRequest returns a request value for making API operation for
// NIFCLOUD Computing.
//
//    // Example sending a request using NiftyRegisterVpnGatewaysWithSecurityGroupRequest.
//    req := client.NiftyRegisterVpnGatewaysWithSecurityGroupRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://pfs.nifcloud.com/api/rest/NiftyRegisterVpnGatewaysWithSecurityGroup.htm
func (c *Client) NiftyRegisterVpnGatewaysWithSecurityGroupRequest(input *NiftyRegisterVpnGatewaysWithSecurityGroupInput) NiftyRegisterVpnGatewaysWithSecurityGroupRequest {
	op := &aws.Operation{
		Name:       opNiftyRegisterVpnGatewaysWithSecurityGroup,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &NiftyRegisterVpnGatewaysWithSecurityGroupInput{}
	}

	req := c.newRequest(op, input, &NiftyRegisterVpnGatewaysWithSecurityGroupOutput{})

	return NiftyRegisterVpnGatewaysWithSecurityGroupRequest{Request: req, Input: input, Copy: c.NiftyRegisterVpnGatewaysWithSecurityGroupRequest}
}

// NiftyRegisterVpnGatewaysWithSecurityGroupRequest is the request type for the
// NiftyRegisterVpnGatewaysWithSecurityGroup API operation.
type NiftyRegisterVpnGatewaysWithSecurityGroupRequest struct {
	*aws.Request
	Input *NiftyRegisterVpnGatewaysWithSecurityGroupInput
	Copy  func(*NiftyRegisterVpnGatewaysWithSecurityGroupInput) NiftyRegisterVpnGatewaysWithSecurityGroupRequest
}

// Send marshals and sends the NiftyRegisterVpnGatewaysWithSecurityGroup API request.
func (r NiftyRegisterVpnGatewaysWithSecurityGroupRequest) Send(ctx context.Context) (*NiftyRegisterVpnGatewaysWithSecurityGroupResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &NiftyRegisterVpnGatewaysWithSecurityGroupResponse{
		NiftyRegisterVpnGatewaysWithSecurityGroupOutput: r.Request.Data.(*NiftyRegisterVpnGatewaysWithSecurityGroupOutput),
		response: &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// NiftyRegisterVpnGatewaysWithSecurityGroupResponse is the response type for the
// NiftyRegisterVpnGatewaysWithSecurityGroup API operation.
type NiftyRegisterVpnGatewaysWithSecurityGroupResponse struct {
	*NiftyRegisterVpnGatewaysWithSecurityGroupOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// NiftyRegisterVpnGatewaysWithSecurityGroup request.
func (r *NiftyRegisterVpnGatewaysWithSecurityGroupResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
