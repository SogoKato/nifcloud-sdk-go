// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package computing

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/nifcloud/nifcloud-sdk-go/internal/nifcloudutil"
)

type CreateNetworkInterfaceInput struct {
	_ struct{} `type:"structure"`

	Description *string `locationName:"Description" type:"string"`

	IpAddress *string `locationName:"IpAddress" type:"string"`

	// NiftyNetworkId is a required field
	NiftyNetworkId *string `locationName:"NiftyNetworkId" type:"string" required:"true"`

	Placement *RequestPlacementOfCreateNetworkInterface `locationName:"Placement" type:"structure"`
}

// String returns the string representation
func (s CreateNetworkInterfaceInput) String() string {
	return nifcloudutil.Prettify(s)
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *CreateNetworkInterfaceInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "CreateNetworkInterfaceInput"}

	if s.NiftyNetworkId == nil {
		invalidParams.Add(aws.NewErrParamRequired("NiftyNetworkId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

type CreateNetworkInterfaceOutput struct {
	_ struct{} `type:"structure"`

	NetworkInterface *NetworkInterface `locationName:"networkInterface" type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	Return *bool `locationName:"return" type:"boolean"`
}

// String returns the string representation
func (s CreateNetworkInterfaceOutput) String() string {
	return nifcloudutil.Prettify(s)
}

const opCreateNetworkInterface = "CreateNetworkInterface"

// CreateNetworkInterfaceRequest returns a request value for making API operation for
// NIFCLOUD Computing.
//
//    // Example sending a request using CreateNetworkInterfaceRequest.
//    req := client.CreateNetworkInterfaceRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://pfs.nifcloud.com/api/rest/CreateNetworkInterface.htm
func (c *Client) CreateNetworkInterfaceRequest(input *CreateNetworkInterfaceInput) CreateNetworkInterfaceRequest {
	op := &aws.Operation{
		Name:       opCreateNetworkInterface,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &CreateNetworkInterfaceInput{}
	}

	req := c.newRequest(op, input, &CreateNetworkInterfaceOutput{})

	return CreateNetworkInterfaceRequest{Request: req, Input: input, Copy: c.CreateNetworkInterfaceRequest}
}

// CreateNetworkInterfaceRequest is the request type for the
// CreateNetworkInterface API operation.
type CreateNetworkInterfaceRequest struct {
	*aws.Request
	Input *CreateNetworkInterfaceInput
	Copy  func(*CreateNetworkInterfaceInput) CreateNetworkInterfaceRequest
}

// Send marshals and sends the CreateNetworkInterface API request.
func (r CreateNetworkInterfaceRequest) Send(ctx context.Context) (*CreateNetworkInterfaceResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &CreateNetworkInterfaceResponse{
		CreateNetworkInterfaceOutput: r.Request.Data.(*CreateNetworkInterfaceOutput),
		response:                     &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// CreateNetworkInterfaceResponse is the response type for the
// CreateNetworkInterface API operation.
type CreateNetworkInterfaceResponse struct {
	*CreateNetworkInterfaceOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// CreateNetworkInterface request.
func (r *CreateNetworkInterfaceResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
