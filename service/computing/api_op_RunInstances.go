// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package computing

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/nifcloud/nifcloud-sdk-go/internal/nifcloudutil"
)

type RunInstancesInput struct {
	_ struct{} `type:"structure"`

	AccountingType AccountingTypeOfRunInstancesRequest `locationName:"AccountingType" type:"string" enum:"true"`

	AddressingType *string `locationName:"AddressingType" type:"string"`

	Admin *string `locationName:"Admin" type:"string"`

	Agreement *bool `locationName:"Agreement" type:"boolean"`

	BlockDeviceMapping []RequestBlockDeviceMapping `locationName:"BlockDeviceMapping" type:"list"`

	Description *string `locationName:"Description" type:"string"`

	DisableApiTermination *bool `locationName:"DisableApiTermination" type:"boolean"`

	// ImageId is a required field
	ImageId *string `locationName:"ImageId" type:"string" required:"true"`

	InstanceId *string `locationName:"InstanceId" type:"string"`

	InstanceInitiatedShutdownBehavior *string `locationName:"InstanceInitiatedShutdownBehavior" type:"string"`

	InstanceType InstanceTypeOfRunInstancesRequest `locationName:"InstanceType" type:"string" enum:"true"`

	IpType IpTypeOfRunInstancesRequest `locationName:"IpType" type:"string" enum:"true"`

	KernelId *string `locationName:"KernelId" type:"string"`

	KeyName *string `locationName:"KeyName" type:"string"`

	License []RequestLicense `locationName:"License" type:"list"`

	MaxCount *int64 `locationName:"MaxCount" type:"integer"`

	MinCount *int64 `locationName:"MinCount" type:"integer"`

	Monitoring *RequestMonitoring `locationName:"Monitoring" type:"structure"`

	NetworkInterface []RequestNetworkInterface `locationName:"NetworkInterface" type:"list"`

	Password *string `locationName:"Password" type:"string"`

	Placement *RequestPlacement `locationName:"Placement" type:"structure"`

	PublicIp *string `locationName:"PublicIp" type:"string"`

	RamdiskId *string `locationName:"RamdiskId" type:"string"`

	SecurityGroup []string `locationName:"SecurityGroup" type:"list"`

	SubnetId *string `locationName:"SubnetId" type:"string"`

	UserData *RequestUserData `locationName:"UserData" type:"structure"`
}

// String returns the string representation
func (s RunInstancesInput) String() string {
	return nifcloudutil.Prettify(s)
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *RunInstancesInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "RunInstancesInput"}

	if s.ImageId == nil {
		invalidParams.Add(aws.NewErrParamRequired("ImageId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

type RunInstancesOutput struct {
	_ struct{} `type:"structure"`

	GroupSet []GroupSet `locationName:"groupSet" locationNameList:"item" type:"list"`

	InstancesSet []InstancesSetOfRunInstances `locationName:"instancesSet" locationNameList:"item" type:"list"`

	OwnerId *string `locationName:"ownerId" type:"string"`

	RequestId *string `locationName:"requestId" type:"string"`

	ReservationId *string `locationName:"reservationId" type:"string"`
}

// String returns the string representation
func (s RunInstancesOutput) String() string {
	return nifcloudutil.Prettify(s)
}

const opRunInstances = "RunInstances"

// RunInstancesRequest returns a request value for making API operation for
// NIFCLOUD Computing.
//
//    // Example sending a request using RunInstancesRequest.
//    req := client.RunInstancesRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://pfs.nifcloud.com/api/rest/RunInstances.htm
func (c *Client) RunInstancesRequest(input *RunInstancesInput) RunInstancesRequest {
	op := &aws.Operation{
		Name:       opRunInstances,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &RunInstancesInput{}
	}

	req := c.newRequest(op, input, &RunInstancesOutput{})

	return RunInstancesRequest{Request: req, Input: input, Copy: c.RunInstancesRequest}
}

// RunInstancesRequest is the request type for the
// RunInstances API operation.
type RunInstancesRequest struct {
	*aws.Request
	Input *RunInstancesInput
	Copy  func(*RunInstancesInput) RunInstancesRequest
}

// Send marshals and sends the RunInstances API request.
func (r RunInstancesRequest) Send(ctx context.Context) (*RunInstancesResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &RunInstancesResponse{
		RunInstancesOutput: r.Request.Data.(*RunInstancesOutput),
		response:           &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// RunInstancesResponse is the response type for the
// RunInstances API operation.
type RunInstancesResponse struct {
	*RunInstancesOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// RunInstances request.
func (r *RunInstancesResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
