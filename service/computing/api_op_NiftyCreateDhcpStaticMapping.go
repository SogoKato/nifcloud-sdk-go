// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package computing

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/nifcloud/nifcloud-sdk-go/internal/nifcloudutil"
)

type NiftyCreateDhcpStaticMappingInput struct {
	_ struct{} `type:"structure"`

	Description *string `locationName:"Description" type:"string"`

	// DhcpConfigId is a required field
	DhcpConfigId *string `locationName:"DhcpConfigId" type:"string" required:"true"`

	// IpAddress is a required field
	IpAddress *string `locationName:"IpAddress" type:"string" required:"true"`

	// MacAddress is a required field
	MacAddress *string `locationName:"MacAddress" type:"string" required:"true"`
}

// String returns the string representation
func (s NiftyCreateDhcpStaticMappingInput) String() string {
	return nifcloudutil.Prettify(s)
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *NiftyCreateDhcpStaticMappingInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "NiftyCreateDhcpStaticMappingInput"}

	if s.DhcpConfigId == nil {
		invalidParams.Add(aws.NewErrParamRequired("DhcpConfigId"))
	}

	if s.IpAddress == nil {
		invalidParams.Add(aws.NewErrParamRequired("IpAddress"))
	}

	if s.MacAddress == nil {
		invalidParams.Add(aws.NewErrParamRequired("MacAddress"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

type NiftyCreateDhcpStaticMappingOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	Return *bool `locationName:"return" type:"boolean"`
}

// String returns the string representation
func (s NiftyCreateDhcpStaticMappingOutput) String() string {
	return nifcloudutil.Prettify(s)
}

const opNiftyCreateDhcpStaticMapping = "NiftyCreateDhcpStaticMapping"

// NiftyCreateDhcpStaticMappingRequest returns a request value for making API operation for
// NIFCLOUD Computing.
//
//    // Example sending a request using NiftyCreateDhcpStaticMappingRequest.
//    req := client.NiftyCreateDhcpStaticMappingRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://pfs.nifcloud.com/api/rest/NiftyCreateDhcpStaticMapping.htm
func (c *Client) NiftyCreateDhcpStaticMappingRequest(input *NiftyCreateDhcpStaticMappingInput) NiftyCreateDhcpStaticMappingRequest {
	op := &aws.Operation{
		Name:       opNiftyCreateDhcpStaticMapping,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &NiftyCreateDhcpStaticMappingInput{}
	}

	req := c.newRequest(op, input, &NiftyCreateDhcpStaticMappingOutput{})

	return NiftyCreateDhcpStaticMappingRequest{Request: req, Input: input, Copy: c.NiftyCreateDhcpStaticMappingRequest}
}

// NiftyCreateDhcpStaticMappingRequest is the request type for the
// NiftyCreateDhcpStaticMapping API operation.
type NiftyCreateDhcpStaticMappingRequest struct {
	*aws.Request
	Input *NiftyCreateDhcpStaticMappingInput
	Copy  func(*NiftyCreateDhcpStaticMappingInput) NiftyCreateDhcpStaticMappingRequest
}

// Send marshals and sends the NiftyCreateDhcpStaticMapping API request.
func (r NiftyCreateDhcpStaticMappingRequest) Send(ctx context.Context) (*NiftyCreateDhcpStaticMappingResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &NiftyCreateDhcpStaticMappingResponse{
		NiftyCreateDhcpStaticMappingOutput: r.Request.Data.(*NiftyCreateDhcpStaticMappingOutput),
		response:                           &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// NiftyCreateDhcpStaticMappingResponse is the response type for the
// NiftyCreateDhcpStaticMapping API operation.
type NiftyCreateDhcpStaticMappingResponse struct {
	*NiftyCreateDhcpStaticMappingOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// NiftyCreateDhcpStaticMapping request.
func (r *NiftyCreateDhcpStaticMappingResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
