// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package computing

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/nifcloud/nifcloud-sdk-go/internal/nifcloudutil"
)

type NiftyUpdateInstanceNetworkInterfacesInput struct {
	_ struct{} `type:"structure"`

	InstanceId *string `locationName:"InstanceId" type:"string"`

	NetworkInterface []RequestNetworkInterfaceOfNiftyUpdateInstanceNetworkInterfaces `locationName:"NetworkInterface" type:"list"`

	NiftyReboot NiftyRebootOfNiftyUpdateInstanceNetworkInterfacesRequest `locationName:"NiftyReboot" type:"string" enum:"true"`
}

// String returns the string representation
func (s NiftyUpdateInstanceNetworkInterfacesInput) String() string {
	return nifcloudutil.Prettify(s)
}

type NiftyUpdateInstanceNetworkInterfacesOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	Return *bool `locationName:"return" type:"boolean"`
}

// String returns the string representation
func (s NiftyUpdateInstanceNetworkInterfacesOutput) String() string {
	return nifcloudutil.Prettify(s)
}

const opNiftyUpdateInstanceNetworkInterfaces = "NiftyUpdateInstanceNetworkInterfaces"

// NiftyUpdateInstanceNetworkInterfacesRequest returns a request value for making API operation for
// NIFCLOUD Computing.
//
//    // Example sending a request using NiftyUpdateInstanceNetworkInterfacesRequest.
//    req := client.NiftyUpdateInstanceNetworkInterfacesRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://pfs.nifcloud.com/api/rest/NiftyUpdateInstanceNetworkInterfaces.htm
func (c *Client) NiftyUpdateInstanceNetworkInterfacesRequest(input *NiftyUpdateInstanceNetworkInterfacesInput) NiftyUpdateInstanceNetworkInterfacesRequest {
	op := &aws.Operation{
		Name:       opNiftyUpdateInstanceNetworkInterfaces,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &NiftyUpdateInstanceNetworkInterfacesInput{}
	}

	req := c.newRequest(op, input, &NiftyUpdateInstanceNetworkInterfacesOutput{})

	return NiftyUpdateInstanceNetworkInterfacesRequest{Request: req, Input: input, Copy: c.NiftyUpdateInstanceNetworkInterfacesRequest}
}

// NiftyUpdateInstanceNetworkInterfacesRequest is the request type for the
// NiftyUpdateInstanceNetworkInterfaces API operation.
type NiftyUpdateInstanceNetworkInterfacesRequest struct {
	*aws.Request
	Input *NiftyUpdateInstanceNetworkInterfacesInput
	Copy  func(*NiftyUpdateInstanceNetworkInterfacesInput) NiftyUpdateInstanceNetworkInterfacesRequest
}

// Send marshals and sends the NiftyUpdateInstanceNetworkInterfaces API request.
func (r NiftyUpdateInstanceNetworkInterfacesRequest) Send(ctx context.Context) (*NiftyUpdateInstanceNetworkInterfacesResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &NiftyUpdateInstanceNetworkInterfacesResponse{
		NiftyUpdateInstanceNetworkInterfacesOutput: r.Request.Data.(*NiftyUpdateInstanceNetworkInterfacesOutput),
		response: &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// NiftyUpdateInstanceNetworkInterfacesResponse is the response type for the
// NiftyUpdateInstanceNetworkInterfaces API operation.
type NiftyUpdateInstanceNetworkInterfacesResponse struct {
	*NiftyUpdateInstanceNetworkInterfacesOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// NiftyUpdateInstanceNetworkInterfaces request.
func (r *NiftyUpdateInstanceNetworkInterfacesResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
