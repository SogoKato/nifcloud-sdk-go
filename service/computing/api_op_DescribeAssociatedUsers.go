// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package computing

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/nifcloud/nifcloud-sdk-go/internal/nifcloudutil"
)

type DescribeAssociatedUsersInput struct {
	_ struct{} `type:"structure"`

	// FunctionName is a required field
	FunctionName FunctionNameOfDescribeAssociatedUsersRequest `locationName:"FunctionName" type:"string" required:"true" enum:"true"`
}

// String returns the string representation
func (s DescribeAssociatedUsersInput) String() string {
	return nifcloudutil.Prettify(s)
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribeAssociatedUsersInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "DescribeAssociatedUsersInput"}
	if len(s.FunctionName) == 0 {
		invalidParams.Add(aws.NewErrParamRequired("FunctionName"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

type DescribeAssociatedUsersOutput struct {
	_ struct{} `type:"structure"`

	ResponseMetadata *ResponseMetadata `locationName:"ResponseMetadata" type:"structure"`

	Users []Users `locationName:"Users" locationNameList:"member" type:"list"`
}

// String returns the string representation
func (s DescribeAssociatedUsersOutput) String() string {
	return nifcloudutil.Prettify(s)
}

const opDescribeAssociatedUsers = "DescribeAssociatedUsers"

// DescribeAssociatedUsersRequest returns a request value for making API operation for
// NIFCLOUD Computing.
//
//    // Example sending a request using DescribeAssociatedUsersRequest.
//    req := client.DescribeAssociatedUsersRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://pfs.nifcloud.com/api/rest/DescribeAssociatedUsers.htm
func (c *Client) DescribeAssociatedUsersRequest(input *DescribeAssociatedUsersInput) DescribeAssociatedUsersRequest {
	op := &aws.Operation{
		Name:       opDescribeAssociatedUsers,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &DescribeAssociatedUsersInput{}
	}

	req := c.newRequest(op, input, &DescribeAssociatedUsersOutput{})

	return DescribeAssociatedUsersRequest{Request: req, Input: input, Copy: c.DescribeAssociatedUsersRequest}
}

// DescribeAssociatedUsersRequest is the request type for the
// DescribeAssociatedUsers API operation.
type DescribeAssociatedUsersRequest struct {
	*aws.Request
	Input *DescribeAssociatedUsersInput
	Copy  func(*DescribeAssociatedUsersInput) DescribeAssociatedUsersRequest
}

// Send marshals and sends the DescribeAssociatedUsers API request.
func (r DescribeAssociatedUsersRequest) Send(ctx context.Context) (*DescribeAssociatedUsersResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &DescribeAssociatedUsersResponse{
		DescribeAssociatedUsersOutput: r.Request.Data.(*DescribeAssociatedUsersOutput),
		response:                      &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// DescribeAssociatedUsersResponse is the response type for the
// DescribeAssociatedUsers API operation.
type DescribeAssociatedUsersResponse struct {
	*DescribeAssociatedUsersOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// DescribeAssociatedUsers request.
func (r *DescribeAssociatedUsersResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
