// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package computing

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/nifcloud/nifcloud-sdk-go/internal/nifcloudutil"
)

type NiftyDeleteDhcpIpAddressPoolInput struct {
	_ struct{} `type:"structure"`

	// DhcpConfigId is a required field
	DhcpConfigId *string `locationName:"DhcpConfigId" type:"string" required:"true"`

	// StartIpAddress is a required field
	StartIpAddress *string `locationName:"StartIpAddress" type:"string" required:"true"`

	// StopIpAddress is a required field
	StopIpAddress *string `locationName:"StopIpAddress" type:"string" required:"true"`
}

// String returns the string representation
func (s NiftyDeleteDhcpIpAddressPoolInput) String() string {
	return nifcloudutil.Prettify(s)
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *NiftyDeleteDhcpIpAddressPoolInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "NiftyDeleteDhcpIpAddressPoolInput"}

	if s.DhcpConfigId == nil {
		invalidParams.Add(aws.NewErrParamRequired("DhcpConfigId"))
	}

	if s.StartIpAddress == nil {
		invalidParams.Add(aws.NewErrParamRequired("StartIpAddress"))
	}

	if s.StopIpAddress == nil {
		invalidParams.Add(aws.NewErrParamRequired("StopIpAddress"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

type NiftyDeleteDhcpIpAddressPoolOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	Return *bool `locationName:"return" type:"boolean"`
}

// String returns the string representation
func (s NiftyDeleteDhcpIpAddressPoolOutput) String() string {
	return nifcloudutil.Prettify(s)
}

const opNiftyDeleteDhcpIpAddressPool = "NiftyDeleteDhcpIpAddressPool"

// NiftyDeleteDhcpIpAddressPoolRequest returns a request value for making API operation for
// NIFCLOUD Computing.
//
//    // Example sending a request using NiftyDeleteDhcpIpAddressPoolRequest.
//    req := client.NiftyDeleteDhcpIpAddressPoolRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://pfs.nifcloud.com/api/rest/NiftyDeleteDhcpIpAddressPool.htm
func (c *Client) NiftyDeleteDhcpIpAddressPoolRequest(input *NiftyDeleteDhcpIpAddressPoolInput) NiftyDeleteDhcpIpAddressPoolRequest {
	op := &aws.Operation{
		Name:       opNiftyDeleteDhcpIpAddressPool,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &NiftyDeleteDhcpIpAddressPoolInput{}
	}

	req := c.newRequest(op, input, &NiftyDeleteDhcpIpAddressPoolOutput{})

	return NiftyDeleteDhcpIpAddressPoolRequest{Request: req, Input: input, Copy: c.NiftyDeleteDhcpIpAddressPoolRequest}
}

// NiftyDeleteDhcpIpAddressPoolRequest is the request type for the
// NiftyDeleteDhcpIpAddressPool API operation.
type NiftyDeleteDhcpIpAddressPoolRequest struct {
	*aws.Request
	Input *NiftyDeleteDhcpIpAddressPoolInput
	Copy  func(*NiftyDeleteDhcpIpAddressPoolInput) NiftyDeleteDhcpIpAddressPoolRequest
}

// Send marshals and sends the NiftyDeleteDhcpIpAddressPool API request.
func (r NiftyDeleteDhcpIpAddressPoolRequest) Send(ctx context.Context) (*NiftyDeleteDhcpIpAddressPoolResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &NiftyDeleteDhcpIpAddressPoolResponse{
		NiftyDeleteDhcpIpAddressPoolOutput: r.Request.Data.(*NiftyDeleteDhcpIpAddressPoolOutput),
		response:                           &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// NiftyDeleteDhcpIpAddressPoolResponse is the response type for the
// NiftyDeleteDhcpIpAddressPool API operation.
type NiftyDeleteDhcpIpAddressPoolResponse struct {
	*NiftyDeleteDhcpIpAddressPoolOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// NiftyDeleteDhcpIpAddressPool request.
func (r *NiftyDeleteDhcpIpAddressPoolResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
