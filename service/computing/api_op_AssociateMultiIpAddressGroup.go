// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package computing

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/nifcloud/nifcloud-sdk-go/internal/nifcloudutil"
)

type AssociateMultiIpAddressGroupInput struct {
	_ struct{} `type:"structure"`

	InstanceUniqueId *string `locationName:"InstanceUniqueId" type:"string"`

	MultiIpAddressGroupId *string `locationName:"MultiIpAddressGroupId" type:"string"`

	NiftyReboot NiftyRebootOfAssociateMultiIpAddressGroupRequest `locationName:"NiftyReboot" type:"string" enum:"true"`
}

// String returns the string representation
func (s AssociateMultiIpAddressGroupInput) String() string {
	return nifcloudutil.Prettify(s)
}

type AssociateMultiIpAddressGroupOutput struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`

	Return *bool `locationName:"return" type:"boolean"`
}

// String returns the string representation
func (s AssociateMultiIpAddressGroupOutput) String() string {
	return nifcloudutil.Prettify(s)
}

const opAssociateMultiIpAddressGroup = "AssociateMultiIpAddressGroup"

// AssociateMultiIpAddressGroupRequest returns a request value for making API operation for
// NIFCLOUD Computing.
//
//    // Example sending a request using AssociateMultiIpAddressGroupRequest.
//    req := client.AssociateMultiIpAddressGroupRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://pfs.nifcloud.com/api/rest/AssociateMultiIpAddressGroup.htm
func (c *Client) AssociateMultiIpAddressGroupRequest(input *AssociateMultiIpAddressGroupInput) AssociateMultiIpAddressGroupRequest {
	op := &aws.Operation{
		Name:       opAssociateMultiIpAddressGroup,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &AssociateMultiIpAddressGroupInput{}
	}

	req := c.newRequest(op, input, &AssociateMultiIpAddressGroupOutput{})

	return AssociateMultiIpAddressGroupRequest{Request: req, Input: input, Copy: c.AssociateMultiIpAddressGroupRequest}
}

// AssociateMultiIpAddressGroupRequest is the request type for the
// AssociateMultiIpAddressGroup API operation.
type AssociateMultiIpAddressGroupRequest struct {
	*aws.Request
	Input *AssociateMultiIpAddressGroupInput
	Copy  func(*AssociateMultiIpAddressGroupInput) AssociateMultiIpAddressGroupRequest
}

// Send marshals and sends the AssociateMultiIpAddressGroup API request.
func (r AssociateMultiIpAddressGroupRequest) Send(ctx context.Context) (*AssociateMultiIpAddressGroupResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &AssociateMultiIpAddressGroupResponse{
		AssociateMultiIpAddressGroupOutput: r.Request.Data.(*AssociateMultiIpAddressGroupOutput),
		response:                           &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// AssociateMultiIpAddressGroupResponse is the response type for the
// AssociateMultiIpAddressGroup API operation.
type AssociateMultiIpAddressGroupResponse struct {
	*AssociateMultiIpAddressGroupOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// AssociateMultiIpAddressGroup request.
func (r *AssociateMultiIpAddressGroupResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
