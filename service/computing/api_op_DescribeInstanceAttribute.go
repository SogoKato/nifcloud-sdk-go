// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package computing

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/nifcloud/nifcloud-sdk-go/internal/nifcloudutil"
)

type DescribeInstanceAttributeInput struct {
	_ struct{} `type:"structure"`

	Attribute AttributeOfDescribeInstanceAttributeRequest `locationName:"Attribute" type:"string" enum:"true"`

	// InstanceId is a required field
	InstanceId *string `locationName:"InstanceId" type:"string" required:"true"`
}

// String returns the string representation
func (s DescribeInstanceAttributeInput) String() string {
	return nifcloudutil.Prettify(s)
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribeInstanceAttributeInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "DescribeInstanceAttributeInput"}

	if s.InstanceId == nil {
		invalidParams.Add(aws.NewErrParamRequired("InstanceId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

type DescribeInstanceAttributeOutput struct {
	_ struct{} `type:"structure"`

	AccountingType *AccountingType `locationName:"accountingType" type:"structure"`

	Autoscaling *Autoscaling `locationName:"autoscaling" type:"structure"`

	BlockDeviceMapping []BlockDeviceMapping `locationName:"blockDeviceMapping" locationNameList:"item" type:"list"`

	CopyInfo *CopyInfo `locationName:"copyInfo" type:"structure"`

	Description *Description `locationName:"description" type:"structure"`

	DisableApiTermination *DisableApiTermination `locationName:"disableApiTermination" type:"structure"`

	GroupId *GroupId `locationName:"groupId" type:"structure"`

	InstanceId *string `locationName:"instanceId" type:"string"`

	InstanceType *InstanceType `locationName:"instanceType" type:"structure"`

	InstanceUniqueId *string `locationName:"instanceUniqueId" type:"string"`

	IpType *IpType `locationName:"ipType" type:"structure"`

	Loadbalancing []Loadbalancing `locationName:"loadbalancing" locationNameList:"item" type:"list"`

	NetworkInterfaceSet []NetworkInterfaceSet `locationName:"networkInterfaceSet" locationNameList:"item" type:"list"`

	NextMonthAccountingType *NextMonthAccountingType `locationName:"nextMonthAccountingType" type:"structure"`

	NiftyElasticLoadBalancing []NiftyElasticLoadBalancing `locationName:"niftyElasticLoadBalancing" locationNameList:"item" type:"list"`

	NiftyPrivateIpType *NiftyPrivateIpType `locationName:"niftyPrivateIpType" type:"structure"`

	RequestId *string `locationName:"requestId" type:"string"`
}

// String returns the string representation
func (s DescribeInstanceAttributeOutput) String() string {
	return nifcloudutil.Prettify(s)
}

const opDescribeInstanceAttribute = "DescribeInstanceAttribute"

// DescribeInstanceAttributeRequest returns a request value for making API operation for
// NIFCLOUD Computing.
//
//    // Example sending a request using DescribeInstanceAttributeRequest.
//    req := client.DescribeInstanceAttributeRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://pfs.nifcloud.com/api/rest/DescribeInstanceAttribute.htm
func (c *Client) DescribeInstanceAttributeRequest(input *DescribeInstanceAttributeInput) DescribeInstanceAttributeRequest {
	op := &aws.Operation{
		Name:       opDescribeInstanceAttribute,
		HTTPMethod: "POST",
		HTTPPath:   "/api/",
	}

	if input == nil {
		input = &DescribeInstanceAttributeInput{}
	}

	req := c.newRequest(op, input, &DescribeInstanceAttributeOutput{})

	return DescribeInstanceAttributeRequest{Request: req, Input: input, Copy: c.DescribeInstanceAttributeRequest}
}

// DescribeInstanceAttributeRequest is the request type for the
// DescribeInstanceAttribute API operation.
type DescribeInstanceAttributeRequest struct {
	*aws.Request
	Input *DescribeInstanceAttributeInput
	Copy  func(*DescribeInstanceAttributeInput) DescribeInstanceAttributeRequest
}

// Send marshals and sends the DescribeInstanceAttribute API request.
func (r DescribeInstanceAttributeRequest) Send(ctx context.Context) (*DescribeInstanceAttributeResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &DescribeInstanceAttributeResponse{
		DescribeInstanceAttributeOutput: r.Request.Data.(*DescribeInstanceAttributeOutput),
		response:                        &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// DescribeInstanceAttributeResponse is the response type for the
// DescribeInstanceAttribute API operation.
type DescribeInstanceAttributeResponse struct {
	*DescribeInstanceAttributeOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// DescribeInstanceAttribute request.
func (r *DescribeInstanceAttributeResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
