// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package nas

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/nifcloud/nifcloud-sdk-go/internal/nifcloudutil"
)

type RevokeNASSecurityGroupIngressInput struct {
	_ struct{} `type:"structure"`

	CIDRIP *string `locationName:"CIDRIP" type:"string"`

	// NASSecurityGroupName is a required field
	NASSecurityGroupName *string `locationName:"NASSecurityGroupName" type:"string" required:"true"`

	SecurityGroupName *string `locationName:"SecurityGroupName" type:"string"`
}

// String returns the string representation
func (s RevokeNASSecurityGroupIngressInput) String() string {
	return nifcloudutil.Prettify(s)
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *RevokeNASSecurityGroupIngressInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "RevokeNASSecurityGroupIngressInput"}

	if s.NASSecurityGroupName == nil {
		invalidParams.Add(aws.NewErrParamRequired("NASSecurityGroupName"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

type RevokeNASSecurityGroupIngressOutput struct {
	_ struct{} `type:"structure"`

	NASSecurityGroup *NASSecurityGroup `type:"structure"`
}

// String returns the string representation
func (s RevokeNASSecurityGroupIngressOutput) String() string {
	return nifcloudutil.Prettify(s)
}

const opRevokeNASSecurityGroupIngress = "RevokeNASSecurityGroupIngress"

// RevokeNASSecurityGroupIngressRequest returns a request value for making API operation for
// NIFCLOUD NAS.
//
//    // Example sending a request using RevokeNASSecurityGroupIngressRequest.
//    req := client.RevokeNASSecurityGroupIngressRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://pfs.nifcloud.com/api/nas/RevokeNASSecurityGroupIngress.htm
func (c *Client) RevokeNASSecurityGroupIngressRequest(input *RevokeNASSecurityGroupIngressInput) RevokeNASSecurityGroupIngressRequest {
	op := &aws.Operation{
		Name:       opRevokeNASSecurityGroupIngress,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &RevokeNASSecurityGroupIngressInput{}
	}

	req := c.newRequest(op, input, &RevokeNASSecurityGroupIngressOutput{})

	return RevokeNASSecurityGroupIngressRequest{Request: req, Input: input, Copy: c.RevokeNASSecurityGroupIngressRequest}
}

// RevokeNASSecurityGroupIngressRequest is the request type for the
// RevokeNASSecurityGroupIngress API operation.
type RevokeNASSecurityGroupIngressRequest struct {
	*aws.Request
	Input *RevokeNASSecurityGroupIngressInput
	Copy  func(*RevokeNASSecurityGroupIngressInput) RevokeNASSecurityGroupIngressRequest
}

// Send marshals and sends the RevokeNASSecurityGroupIngress API request.
func (r RevokeNASSecurityGroupIngressRequest) Send(ctx context.Context) (*RevokeNASSecurityGroupIngressResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &RevokeNASSecurityGroupIngressResponse{
		RevokeNASSecurityGroupIngressOutput: r.Request.Data.(*RevokeNASSecurityGroupIngressOutput),
		response:                            &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// RevokeNASSecurityGroupIngressResponse is the response type for the
// RevokeNASSecurityGroupIngress API operation.
type RevokeNASSecurityGroupIngressResponse struct {
	*RevokeNASSecurityGroupIngressOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// RevokeNASSecurityGroupIngress request.
func (r *RevokeNASSecurityGroupIngressResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
