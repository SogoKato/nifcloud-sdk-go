// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package essiface provides an interface to enable mocking the NIFCLOUD ESS service client
// for testing your code.
//
// It is important to note that this interface will have breaking changes
// when the service model is updated and adds new API operations, paginators,
// and waiters.
package essiface

import (
	"github.com/nifcloud/nifcloud-sdk-go/service/ess"
)

// ClientAPI provides an interface to enable mocking the
// ess.Client methods. This make unit testing your code that
// calls out to the SDK's service client's calls easier.
//
// The best way to use this interface is so the SDK's service client's calls
// can be stubbed out for unit testing your code with the SDK without needing
// to inject custom request handlers into the SDK's request pipeline.
//
//    // myFunc uses an SDK service client to make a request to
//    // ess.
//    func myFunc(svc essiface.ClientAPI) bool {
//        // Make svc.DeleteIdentity request
//    }
//
//    func main() {
//        cfg, err := external.LoadDefaultAWSConfig()
//        if err != nil {
//            panic("failed to load config, " + err.Error())
//        }
//
//        svc := ess.New(cfg)
//
//        myFunc(svc)
//    }
//
// In your _test.go file:
//
//    // Define a mock struct to be used in your unit tests of myFunc.
//    type mockClientClient struct {
//        essiface.ClientPI
//    }
//    func (m *mockClientClient) DeleteIdentity(input *ess.DeleteIdentityInput) (*ess.DeleteIdentityOutput, error) {
//        // mock response/functionality
//    }
//
//    func TestMyFunc(t *testing.T) {
//        // Setup Test
//        mockSvc := &mockClientClient{}
//
//        myfunc(mockSvc)
//
//        // Verify myFunc's functionality
//    }
//
// It is important to note that this interface will have breaking changes
// when the service model is updated and adds new API operations, paginators,
// and waiters. Its suggested to use the pattern above for testing, or using
// tooling to generate mocks to satisfy the interfaces.
type ClientAPI interface {
	DeleteIdentityRequest(*ess.DeleteIdentityInput) ess.DeleteIdentityRequest

	GetDeliveryLogRequest(*ess.GetDeliveryLogInput) ess.GetDeliveryLogRequest

	GetIdentityDkimAttributesRequest(*ess.GetIdentityDkimAttributesInput) ess.GetIdentityDkimAttributesRequest

	GetIdentityVerificationAttributesRequest(*ess.GetIdentityVerificationAttributesInput) ess.GetIdentityVerificationAttributesRequest

	GetSendQuotaRequest(*ess.GetSendQuotaInput) ess.GetSendQuotaRequest

	GetSendStatisticsRequest(*ess.GetSendStatisticsInput) ess.GetSendStatisticsRequest

	ListIdentitiesRequest(*ess.ListIdentitiesInput) ess.ListIdentitiesRequest

	SendEmailRequest(*ess.SendEmailInput) ess.SendEmailRequest

	SendRawEmailRequest(*ess.SendRawEmailInput) ess.SendRawEmailRequest

	SetIdentityDkimEnabledRequest(*ess.SetIdentityDkimEnabledInput) ess.SetIdentityDkimEnabledRequest

	VerifyDomainDkimRequest(*ess.VerifyDomainDkimInput) ess.VerifyDomainDkimRequest

	VerifyDomainIdentityRequest(*ess.VerifyDomainIdentityInput) ess.VerifyDomainIdentityRequest

	VerifyEmailIdentityRequest(*ess.VerifyEmailIdentityInput) ess.VerifyEmailIdentityRequest
}

var _ ClientAPI = (*ess.Client)(nil)
