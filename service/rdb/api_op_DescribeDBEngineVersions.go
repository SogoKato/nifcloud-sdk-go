// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package rdb

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/nifcloud/nifcloud-sdk-go/internal/nifcloudutil"
)

type DescribeDBEngineVersionsInput struct {
	_ struct{} `type:"structure"`

	DBParameterGroupFamily DBParameterGroupFamilyOfDescribeDBEngineVersionsRequest `locationName:"DBParameterGroupFamily" type:"string" enum:"true"`

	DefaultOnly *bool `locationName:"DefaultOnly" type:"boolean"`

	Engine EngineOfDescribeDBEngineVersionsRequest `locationName:"Engine" type:"string" enum:"true"`

	EngineVersion *string `locationName:"EngineVersion" type:"string"`

	ListSupportedCharacterSets *bool `locationName:"ListSupportedCharacterSets" type:"boolean"`

	Marker *string `locationName:"Marker" type:"string"`

	MaxRecords *int64 `locationName:"MaxRecords" type:"integer"`
}

// String returns the string representation
func (s DescribeDBEngineVersionsInput) String() string {
	return nifcloudutil.Prettify(s)
}

type DescribeDBEngineVersionsOutput struct {
	_ struct{} `type:"structure"`

	DBEngineVersions []DBEngineVersions `locationName:"DBEngineVersions" locationNameList:"DBEngineVersion" type:"list"`

	Marker *string `locationName:"Marker" type:"string"`

	ResponseMetadata *ResponseMetadata `locationName:"ResponseMetadata" type:"structure"`
}

// String returns the string representation
func (s DescribeDBEngineVersionsOutput) String() string {
	return nifcloudutil.Prettify(s)
}

const opDescribeDBEngineVersions = "DescribeDBEngineVersions"

// DescribeDBEngineVersionsRequest returns a request value for making API operation for
// NIFCLOUD RDB.
//
//    // Example sending a request using DescribeDBEngineVersionsRequest.
//    req := client.DescribeDBEngineVersionsRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://pfs.nifcloud.com/api/rdb/DescribeDBEngineVersions.htm
func (c *Client) DescribeDBEngineVersionsRequest(input *DescribeDBEngineVersionsInput) DescribeDBEngineVersionsRequest {
	op := &aws.Operation{
		Name:       opDescribeDBEngineVersions,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeDBEngineVersionsInput{}
	}

	req := c.newRequest(op, input, &DescribeDBEngineVersionsOutput{})

	return DescribeDBEngineVersionsRequest{Request: req, Input: input, Copy: c.DescribeDBEngineVersionsRequest}
}

// DescribeDBEngineVersionsRequest is the request type for the
// DescribeDBEngineVersions API operation.
type DescribeDBEngineVersionsRequest struct {
	*aws.Request
	Input *DescribeDBEngineVersionsInput
	Copy  func(*DescribeDBEngineVersionsInput) DescribeDBEngineVersionsRequest
}

// Send marshals and sends the DescribeDBEngineVersions API request.
func (r DescribeDBEngineVersionsRequest) Send(ctx context.Context) (*DescribeDBEngineVersionsResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &DescribeDBEngineVersionsResponse{
		DescribeDBEngineVersionsOutput: r.Request.Data.(*DescribeDBEngineVersionsOutput),
		response:                       &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// DescribeDBEngineVersionsResponse is the response type for the
// DescribeDBEngineVersions API operation.
type DescribeDBEngineVersionsResponse struct {
	*DescribeDBEngineVersionsOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// DescribeDBEngineVersions request.
func (r *DescribeDBEngineVersionsResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
